@*@model DuLichDLL.Model.DL_Place
@{
    ViewBag.Title = "NicePlaceByCity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>NicePlaceByCity</h2>
<input type="hidden" value="@Model.DL_CityId" name ="cityId" id="cityId"/>
<div id="flip" class="container">

    <div class="f-page f-cover">
        <div class="cover-elements">
            <div class="logo">
                Pageflip
					
                    <a class="f-ref" href="http://www.flickr.com/photos/nasahqphoto/">Images by NASA HQ Photo</a>
            </div>
            <h1>Spacy Flipping Pages with CSS3 &amp; jQuery <span>Inspired by <a href="http://flipboard.com/">Flipboard</a></span></h1>
            <div class="f-cover-story"><span>Cover Story</span>Shuttle Enterprise Flight to New York</div>
        </div>
        <div class="f-cover-flip">&lt; Flip</div>
    </div>
    <div class="f-page">
        @Html.Partial("p_niceplace", Model)
    </div>
    <div class="f-page f-cover-back">
        <div id="codrops-ad-wrapper">
        </div>
    </div>
</div>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        $('.f-page').click(function () {
            alert("huhu");
        });


    });
        var $container = $('#flip'),
            $pages = $container.children().hide();

        Modernizr.load({
            test: Modernizr.csstransforms3d && Modernizr.csstransitions,
            yep: ['/Content/themes/FlipboardPageLayout/js/jquery.tmpl.min.js', '/Content/themes/FlipboardPageLayout/js/jquery.history.js', '/Content/themes/FlipboardPageLayout/js/core.string.js', '/Content/themes/FlipboardPageLayout/js/jquery.touchSwipe-1.2.5.js', '/Content/themes/FlipboardPageLayout/js/jquery.flips.js'],
            nope: '/Content/themes/FlipboardPageLayout/css/fallback.css',
            callback: function (url, result, key) {
                if (url === '/Content/themes/FlipboardPageLayout/css/fallback.css') {
                    $pages.show();
                }
                else if (url === '/Content/themes/FlipboardPageLayout/js/jquery.flips.js') {
                    $container.flips();
                }

            }
        });

		</script>*@


@model DuLichDLL.Model.DL_Place
@{
    ViewBag.Title = "NicePlaceByCity";
    Layout = "~/Views/Shared/_LayoutFilp.cshtml";
}

<input type="hidden" value="@Model.DL_CityId" name ="cityId" id="cityId"/>
<h1 class="title">Moleskine Notebook with jQuery Booklet</h1>
<div class="book_wrapper">
    <a id="next_page_button"></a>
    <a id="prev_page_button"></a>
    <div id="loading" class="loading">Loading pages...</div>
    <div id="mybook" style="display: none;">
        <div class="b-load">
            <div class="page" data-pid="1">
                <img src="~/Content/themes/MoleskineNotebook/images/1.jpg" alt="" />
                <h1>Slider Gallery</h1>
                <p>
                    @Model.Address
                </p>
                <a href="http://tympanus.net/codrops/2010/10/07/slider-gallery/" target="_blank" class="article">Article</a>
                <a href="http://tympanus.net/Tutorials/SliderGallery/" target="_blank" class="demo">Demo</a>
            </div>
            <div class="page" data-pid="2">
                <img src="~/Content/themes/MoleskineNotebook/images/1.jpg" alt="" />
                <h1>Slider Gallery</h1>
                <p>
                    This tutorial is about creating a creative gallery with a
							slider for the thumbnails. The idea is to have an expanding
							thumbnails area which opens once an album is chosen.
							The thumbnails will scroll to the end and move back to
							the first image. The user can scroll through the thumbnails
							by using the slider controls. When a thumbnail is clicked,
							it moves to the center and the full image preview opens.
                </p>
                <a href="http://tympanus.net/codrops/2010/10/07/slider-gallery/" target="_blank" class="article">Article</a>
                <a href="http://tympanus.net/Tutorials/SliderGallery/" target="_blank" class="demo">Demo</a>
            </div>
        </div>
    </div>
    <div id="mybookfuture">
    </div>
</div>
<div>
    <span class="reference">
        <a href=" http://tympanus.net/codrops/2010/12/14/moleskine-notebook/">back to the Codrops tutorial</a>
        <a href="http://builtbywill.com/code/booklet/" target="_blank">booklet jQuery Plugin</a>
    </span>
</div>

<!-- The JavaScript -->

<script type="text/javascript">
    $(document).ready(function () {
        var numclick = 0;

        $('#next_page_button').click(function () {
            numclick++;
            var $mybook = $('#mybook');
            var $mybook_images = $mybook.find('img');
            var length = $mybook_images.length;
            alert($mybook_images.length);
            if (numclick >= length) {
                
                $('#mybookfuture').append('<p>hihi</p>');
                $('.b-load').append('<div class="b-page b-page-' + length + ' b-p2" data-pid="1"> <img src="/Content/themes/MoleskineNotebook/images/1.jpg" alt="" /> <h1>Slider Gallery</h1> <p> HIHIHIHI </p></div>');
            }
        });


    });
    $(function () {
        var $mybook = $('#mybook');
        var $bttn_next = $('#next_page_button');
        var $bttn_prev = $('#prev_page_button');
        var $loading = $('#loading');
        var $mybook_images = $mybook.find('img');
        var cnt_images = $mybook_images.length;
        var loaded = 0;
        //preload all the images in the book,
        //and then call the booklet plugin

        $mybook_images.each(function () {
            var $img = $(this);
            var source = $img.attr('src');
            $('<img/>').load(function () {
                ++loaded;
                if (loaded == cnt_images) {
                    $loading.hide();
                    $bttn_next.show();
                    $bttn_prev.show();
                    $mybook.show().booklet({
                        name: null,                            // name of the booklet to display in the document title bar
                        width: 800,                             // container width
                        height: 500,                             // container height
                        speed: 600,                             // speed of the transition between pages
                        direction: 'LTR',                           // direction of the overall content organization, default LTR, left to right, can be RTL for languages which read right to left
                        startingPage: 0,                               // index of the first page to be displayed
                        easing: 'easeInOutQuad',                 // easing method for complete transition
                        easeIn: 'easeInQuad',                    // easing method for first half of transition
                        easeOut: 'easeOutQuad',                   // easing method for second half of transition

                        closed: true,                           // start with the book "closed", will add empty pages to beginning and end of book
                        closedFrontTitle: null,                            // used with "closed", "menu" and "pageSelector", determines title of blank starting page
                        closedFrontChapter: null,                            // used with "closed", "menu" and "chapterSelector", determines chapter name of blank starting page
                        closedBackTitle: null,                            // used with "closed", "menu" and "pageSelector", determines chapter name of blank ending page
                        closedBackChapter: null,                            // used with "closed", "menu" and "chapterSelector", determines chapter name of blank ending page
                        covers: false,                           // used with  "closed", makes first and last pages into covers, without page numbers (if enabled)

                        pagePadding: 10,                              // padding for each page wrapper
                        pageNumbers: true,                            // display page numbers on each page

                        hovers: false,                            // enables preview pageturn hover animation, shows a small preview of previous or next page on hover
                        overlays: false,                            // enables navigation using a page sized overlay, when enabled links inside the content will not be clickable
                        tabs: false,                           // adds tabs along the top of the pages
                        tabWidth: 60,                              // set the width of the tabs
                        tabHeight: 20,                              // set the height of the tabs
                        arrows: false,                           // adds arrows overlayed over the book edges
                        cursor: 'pointer',                       // cursor css setting for side bar areas

                        hash: false,                           // enables navigation using a hash string, ex: #/page/1 for page 1, will affect all booklets with 'hash' enabled
                        keyboard: true,                            // enables navigation with arrow keys (left: previous, right: next)
                        next: $bttn_next,          			// selector for element to use as click trigger for next page
                        prev: $bttn_prev,          			// selector for element to use as click trigger for previous page

                        menu: null,                            // selector for element to use as the menu area, required for 'pageSelector'
                        pageSelector: false,                           // enables navigation with a dropdown menu of pages, requires 'menu'
                        chapterSelector: false,                           // enables navigation with a dropdown menu of chapters, determined by the "rel" attribute, requires 'menu'

                        shadows: true,                            // display shadows on page animations
                        shadowTopFwdWidth: 166,                             // shadow width for top forward anim
                        shadowTopBackWidth: 166,                             // shadow width for top back anim
                        shadowBtmWidth: 50,                              // shadow width for bottom shadow

                        before: function () { },                    // callback invoked before each page turn animation
                        after: function () { }                     // callback invoked after each page turn animation
                    });
                    Cufon.refresh();
                }
            }).attr('src', source);
        });

    });
</script>
<style>
    #body {
        background: url("/Content/themes/MoleskineNotebook/images/wood.jpg") repeat scroll left top #CCCCCC;
        color: #000000;
        font-family: Arial,Helvetica,sans-serif;
        font-size: 12px;
    }
</style>
